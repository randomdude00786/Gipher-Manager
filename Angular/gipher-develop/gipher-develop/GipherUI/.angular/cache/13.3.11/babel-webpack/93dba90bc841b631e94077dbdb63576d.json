{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { AuthenticationService } from './authentication.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/platform-browser\";\nexport var GipherService = /*#__PURE__*/(function () {\n  var GipherService = /*#__PURE__*/function () {\n    function GipherService(authService, httpClient, sanitizer) {\n      _classCallCheck(this, GipherService);\n\n      this.authService = authService;\n      this.httpClient = httpClient;\n      this.sanitizer = sanitizer;\n      this.giphers = [];\n      this.gipherSubject = new BehaviorSubject(this.giphers);\n    }\n\n    _createClass(GipherService, [{\n      key: \"fetchGiphers\",\n      value: function fetchGiphers(query) {\n        var token = this.authService.getBearerToken();\n        var headerValue = 'Bearer ' + token;\n        return this.httpClient.get(\"http://localhost:8087/api/v1/gipher/externalapi/\".concat(this.authService.getUserId(), \"/\").concat(query), {\n          headers: new HttpHeaders().set('Authorization', headerValue)\n        });\n      }\n    }, {\n      key: \"updateGipher\",\n      value: function updateGipher(gipher) {\n        var token = this.authService.getBearerToken();\n        var headerValue = 'Bearer ' + token;\n        return this.httpClient.put(\"http://localhost:8087/api/v1/gipher/\" + gipher.gipherId, gipher, {\n          headers: new HttpHeaders().set('Authorization', headerValue)\n        });\n      }\n    }, {\n      key: \"deleteGipher\",\n      value: function deleteGipher(gipher) {\n        var token = this.authService.getBearerToken();\n        var headerValue = 'Bearer ' + token;\n        return this.httpClient.delete(\"http://localhost:8087/api/v1/gipher/\" + gipher.gipherId, {\n          headers: new HttpHeaders().set('Authorization', headerValue)\n        });\n      }\n    }, {\n      key: \"fetchBookmarkedGipher\",\n      value: function fetchBookmarkedGipher(userId) {\n        var token = this.authService.getBearerToken();\n        var headerValue = 'Bearer ' + token;\n        return this.httpClient.get(\"http://localhost:8087/api/v1/gipher/bookmark/\".concat(userId), {\n          headers: new HttpHeaders().set('Authorization', headerValue)\n        });\n      }\n    }, {\n      key: \"fetchFavouriteGipher\",\n      value: function fetchFavouriteGipher(userId) {\n        var token = this.authService.getBearerToken();\n        var headerValue = 'Bearer ' + token;\n        return this.httpClient.get(\"http://localhost:8087/api/v1/gipher/favourite/\".concat(userId), {\n          headers: new HttpHeaders().set('Authorization', headerValue)\n        });\n      }\n    }, {\n      key: \"getSantizeUrl\",\n      value: function getSantizeUrl(url) {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n      }\n    }]);\n\n    return GipherService;\n  }();\n\n  GipherService.ɵfac = function GipherService_Factory(t) {\n    return new (t || GipherService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.DomSanitizer));\n  };\n\n  GipherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GipherService,\n    factory: GipherService.ɵfac\n  });\n  return GipherService;\n})();","map":null,"metadata":{},"sourceType":"module"}