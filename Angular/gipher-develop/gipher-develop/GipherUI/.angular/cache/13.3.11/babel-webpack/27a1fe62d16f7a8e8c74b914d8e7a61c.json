{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './service/authentication.service';\nimport { RouterService } from './service/router.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/authentication.service\";\nimport * as i2 from \"./service/router.service\";\nexport var CanActivateRouteGuard = /*#__PURE__*/(function () {\n  var CanActivateRouteGuard = /*#__PURE__*/function () {\n    function CanActivateRouteGuard(authenticationservice, routerservice) {\n      _classCallCheck(this, CanActivateRouteGuard);\n\n      this.authenticationservice = authenticationservice;\n      this.routerservice = routerservice;\n    }\n\n    _createClass(CanActivateRouteGuard, [{\n      key: \"canActivate\",\n      value: function canActivate(next, state) {\n        var _this = this;\n\n        var result = this.authenticationservice.isUserAuthenticated(this.authenticationservice.getBearerToken());\n        return result.then(function (authenticated) {\n          if (!authenticated) {\n            _this.routerservice.routeToLogin();\n          }\n\n          return authenticated;\n        });\n      }\n    }]);\n\n    return CanActivateRouteGuard;\n  }();\n\n  CanActivateRouteGuard.ɵfac = function CanActivateRouteGuard_Factory(t) {\n    return new (t || CanActivateRouteGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.RouterService));\n  };\n\n  CanActivateRouteGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CanActivateRouteGuard,\n    factory: CanActivateRouteGuard.ɵfac\n  });\n  return CanActivateRouteGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}