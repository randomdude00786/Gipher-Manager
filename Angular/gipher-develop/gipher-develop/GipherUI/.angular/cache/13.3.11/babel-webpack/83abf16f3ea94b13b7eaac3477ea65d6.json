{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\khanu\\\\Downloads\\\\gipher-develop\\\\gipher-develop\\\\gipher-develop\\\\GipherUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthenticationService = /*#__PURE__*/(function () {\n  var AuthenticationService = /*#__PURE__*/function () {\n    function AuthenticationService(httpclient) {\n      _classCallCheck(this, AuthenticationService);\n\n      this.httpclient = httpclient;\n      this.isLoggedIn = false;\n      this.isLoggedInSubject = new BehaviorSubject(this.isLoggedIn);\n    }\n\n    _createClass(AuthenticationService, [{\n      key: \"registerUser\",\n      value: function registerUser(data) {\n        return this.httpclient.post('http://localhost:8089/api/v1/auth/register', data);\n      }\n    }, {\n      key: \"authenticateUser\",\n      value: function authenticateUser(data) {\n        return this.httpclient.post('http://localhost:8089/api/v1/auth/login', data);\n      }\n    }, {\n      key: \"setBearerToken\",\n      value: function setBearerToken(token) {\n        localStorage.setItem('bearerToken', token);\n      }\n    }, {\n      key: \"getBearerToken\",\n      value: function getBearerToken() {\n        return localStorage.getItem('bearerToken');\n      }\n    }, {\n      key: \"setUserId\",\n      value: function setUserId(userId) {\n        localStorage.setItem('userId', userId);\n      }\n    }, {\n      key: \"getUserId\",\n      value: function getUserId() {\n        return localStorage.getItem('userId');\n      }\n    }, {\n      key: \"isUserAuthenticated\",\n      value: function isUserAuthenticated(token) {\n        var _this = this;\n\n        if (null != token) {\n          var obs = this.httpclient.post('http://localhost:8089/api/v1/auth/authenticate', {}, {\n            headers: new HttpHeaders().set('Authorization', \"Bearer \".concat(token))\n          });\n          return obs.pipe(map(function (response) {\n            _this.isLoggedIn = response['isAuthenticated'];\n\n            _this.isLoggedInSubject.next(_this.isLoggedIn);\n\n            return response['isAuthenticated'];\n          })).toPromise();\n        } else {\n          return Promise.resolve(false);\n        }\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        localStorage.removeItem('bearerToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('query');\n        this.isLoggedInSubject.next(false);\n      }\n    }, {\n      key: \"isUserLoggedIn\",\n      value: function isUserLoggedIn() {\n        return this.isLoggedInSubject;\n      }\n    }]);\n\n    return AuthenticationService;\n  }();\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}